########################################################################
# Copyright (c) 2022 Robert Bosch GmbH
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
########################################################################

[general]
# server type:
# switch between kuksa_databroker and kuksa_val_server
# default kuksa_val_server
#server_type = kuksa_val_server
server_type = kuksa_databroker
# VSS mapping file
mapping = vss_dbc.json

[kuksa_val_server]
# kuksa_val_server IP address or host name
# ip = localhost
# port = 8090
# protocol = ws
# insecure = False
# JWT security token file
# token=../../kuksa_certificates/jwt/super-admin.json.token

[kuksa_databroker]
# kuksa_databroker IP address or host name
# ip = 127.0.0.1
# port = 55555
# protocol = grpc
# kuksa_databroker does not yet support security features
# insecure = True

[can]
# CAN port, use elmcan to start the elmcan bridge
port = vcan0
#port = elmcan
# Enable SAE-J1939 Mode. False: ignore
j1939 = False
# DBC file used to parse CAN messages
dbcfile = Model3CAN.dbc
# Usage of the SocketCAN or virtual CAN replay with a dumpfile
# candumpfile not specified (commented out) = use SocketCAN (real or virtual provided by linux)
# candumpfile specified = use internal canplayer (no SocketCAN dependency)
candumpfile = candump.log

[elmcan]
# Config for CAN port is \"elmcan\"
# Serial port where ELM is connected.
port = /dev/ttyAMA0
# Baudrate to ELM
baud = 2000000
# Acknowledge CAN messages
canack = false
# CAN bus speed
speed = 500000
